{"version":3,"sources":["client.js","Notification.js","StudentDrawerForm.js","App.js","reportWebVitals.js","index.js"],"names":["checkStatus","response","ok","error","Error","statusText","Promise","reject","openNotificationWithIcon","type","message","description","placement","notification","successNotification","errorNotification","Option","Select","antIcon","LoadingOutlined","style","fontSize","spin","StudentDrawerForm","showDrawer","setShowDrawer","fetchStudents","onCLose","useState","submitting","setSubmitting","title","width","onClose","visible","bodyStyle","paddingBottom","footer","textAlign","onClick","marginRight","layout","onFinishFailed","errorInfo","alert","JSON","stringify","onFinish","student","console","log","fetch","headers","method","body","addNewStudent","then","name","catch","err","json","res","status","finally","hideRequiredMark","gutter","span","Item","label","rules","required","placeholder","value","htmlType","indicator","Header","Layout","Content","Footer","Sider","SubMenu","Menu","TheAvatar","trim","length","icon","UserOutlined","split","charAt","deleteStudent","studentId","callback","removeStudent","columns","dataIndex","key","render","text","Group","onConfirm","id","okText","cancelText","Button","App","students","setStudents","collapsed","setCollapsed","fetching","setFetching","data","useEffect","minHeight","collapsible","onCollapse","className","theme","defaultSelectedKeys","mode","PieChartOutlined","DesktopOutlined","TeamOutlined","FileOutlined","padding","margin","shape","PlusOutlined","size","dataSource","bordered","marginLeft","count","pagination","pageSize","scroll","y","rowKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5179e530.chunk.js","sourcesContent":["const checkStatus = response => {\n    if (response.ok) {\n        return response;\n    }\n    // convert non-2xx HTTP responses into errors:\n    const error = new Error(response.statusText);\n    error.response = response;\n    return Promise.reject(error);\n}\n\nexport const getAllStudents = () =>\n    fetch(\"api/v1/students\")\n        .then(checkStatus);\n\nexport const addNewStudent = student =>\n    fetch(\"api/v1/students\", {\n        headers: {'Content-Type': 'application/json'},\n        method: 'POST',\n        body: JSON.stringify(student)\n    });\n\n\nexport const removeStudent = studentId =>\n    fetch(`api/v1/students/${studentId}`, {\n        method: 'DELETE',\n    })\n        .then(checkStatus);\n","\nimport {notification} from \"antd\";\n\nconst openNotificationWithIcon = (type, message, description, placement) => {\n    placement = placement || 'topTight'\n    notification[type]({message, description, placement});\n};\n\nexport const successNotification = (message, description, placement) =>\n    openNotificationWithIcon('success', message, description, placement);\n\nexport const errorNotification = (message, description, placement) =>\n    openNotificationWithIcon('error', message, description, placement);\n\nexport const infoNotification = (message, description, placement) =>\n    openNotificationWithIcon('info', message, description, placement);\n\nexport const warningNotification = (message, description, placement) =>\n    openNotificationWithIcon('warning', message, description, placement);\n","import {Button, Col, Drawer, Form, Input, Row, Select, Spin} from 'antd';\nimport {addNewStudent} from './client';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport {useState} from 'react';\nimport {errorNotification, successNotification} from './Notification';\n\nconst {Option} = Select;\nconst antIcon = <LoadingOutlined style={{fontSize: 24}} spin/>;\n\nfunction StudentDrawerForm({showDrawer, setShowDrawer, fetchStudents}) {\n    const onCLose = () => setShowDrawer(false);\n    const [submitting, setSubmitting] = useState(false);\n\n    const onFinish = student => {\n        setSubmitting(true)\n        console.log(JSON.stringify(student, null, 2))\n        addNewStudent(student)\n            .then(() => {\n                console.log(\"student added\")\n                onCLose();\n                successNotification(\n                    \"Student successfully added\",\n                    `${student.name} was added to the system`\n                )\n                fetchStudents();\n            }).catch(err => {\n            console.log(err);\n            err.response.json().then(res => {\n                console.log(res);\n                errorNotification(\n                    \"There was an issue\",\n                    `${res.message} [${res.status}] [${res.error}]`,\n                    \"bottomLeft\"\n                )\n            });\n        }).finally(() => {\n            setSubmitting(false);\n        })\n    };\n\n    const onFinishFailed = errorInfo => {\n        alert(JSON.stringify(errorInfo, null, 2));\n    };\n\n    return <Drawer\n        title=\"Create new student\"\n        width={720}\n        onClose={onCLose}\n        visible={showDrawer}\n        bodyStyle={{paddingBottom: 80}}\n        footer={\n            <div\n                style={{\n                    textAlign: 'right',\n                }}\n            >\n                <Button onClick={onCLose} style={{marginRight: 8}}>\n                    Cancel\n                </Button>\n            </div>\n        }\n    >\n        <Form layout=\"vertical\"\n              onFinishFailed={onFinishFailed}\n              onFinish={onFinish}\n              hideRequiredMark>\n            <Row gutter={16}>\n                <Col span={12}>\n                    <Form.Item\n                        name=\"name\"\n                        label=\"Name\"\n                        rules={[{required: true, message: 'Please enter student name'}]}\n                    >\n                        <Input placeholder=\"Please enter student name\"/>\n                    </Form.Item>\n                </Col>\n                <Col span={12}>\n                    <Form.Item\n                        name=\"email\"\n                        label=\"Email\"\n                        rules={[{required: true, message: 'Please enter student email'}]}\n                    >\n                        <Input placeholder=\"Please enter student email\"/>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={16}>\n                <Col span={12}>\n                    <Form.Item\n                        name=\"gender\"\n                        label=\"gender\"\n                        rules={[{required: true, message: 'Please select a gender'}]}\n                    >\n                        <Select placeholder=\"Please select a gender\">\n                            <Option value=\"MALE\">MALE</Option>\n                            <Option value=\"FEMALE\">FEMALE</Option>\n                            <Option value=\"OTHER\">OTHER</Option>\n                        </Select>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={12}>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                {submitting && <Spin indicator={antIcon}/>}\n            </Row>\n\n        </Form>\n    </Drawer>\n}\n\nexport default StudentDrawerForm;\n","import {useEffect, useState} from 'react'\nimport {getAllStudents, removeStudent} from \"./client\";\nimport {Avatar, Badge, Breadcrumb, Button, Divider, Empty, Layout, Menu, Popconfirm, Spin, Table, Tag,} from 'antd';\n\nimport {\n    DesktopOutlined,\n    FileOutlined,\n    LoadingOutlined,\n    PieChartOutlined,\n    PlusOutlined,\n    TeamOutlined,\n    UserOutlined\n} from '@ant-design/icons';\nimport StudentDrawerForm from \"./StudentDrawerForm\";\n\nimport './App.css';\nimport Radio from 'antd/es/radio/radio';\nimport {errorNotification, successNotification} from './Notification';\n\nconst {Header, Content, Footer, Sider} = Layout;\nconst {SubMenu} = Menu;\n\nconst TheAvatar = ({name}) => {\n    let trim = name.trim();\n    if (trim.length === 0) {\n        return <Avatar icon={<UserOutlined/>}/>\n    }\n    const split = trim.split(\" \");\n    if (split.length === 1) {\n        return <Avatar>{name.charAt(0)}</Avatar>\n    }\n    return <Avatar>{`${name.charAt(0)}${name.charAt(name.length - 1)}`}</Avatar>\n}\n\nconst deleteStudent = (studentId, callback) => {\n    removeStudent(studentId).then(() => {\n        successNotification('Student deleted', `${studentId}`);\n        callback()\n    })\n        .catch(err => {\n            err.response.json().then(res => {\n                console.log(res);\n                errorNotification(\n                    \"There was an issue\",\n                    `${res.message} [${res.status}] [${res.error}]`,\n                    \"bottomLeft\"\n                )\n            });\n        })\n\n}\n\nconst columns = fetchStudents => [\n    {\n        title: '',\n        dataIndex: 'avatar',\n        key: 'avatar',\n        render: (text, student) => <TheAvatar name={student.name}/>,\n    },\n    {\n        title: 'Id',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email',\n    },\n    {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key: 'gender',\n    },\n    {\n        title: 'Actions',\n        key: 'actions',\n        render: (text, student) =>\n            <Radio.Group>\n                <Popconfirm\n                    placement='topRight'\n                    title={`Are you sure to delete ${student.name}`}\n                    onConfirm={() => deleteStudent(student.id, fetchStudents)}\n                    okText='Yes'\n                    cancelText='No'>\n                    <Radio.Button value=\"small\">Delete</Radio.Button>\n                </Popconfirm>\n                <Radio.Button onClick={() => alert(\"TODO: Implement edit student\")} value=\"small\">Edit</Radio.Button>\n            </Radio.Group>\n    }\n];\n\nconst antIcon = <LoadingOutlined style={{fontSize: 24}} spin/>;\n\nfunction App() {\n    const [students, setStudents] = useState([]);\n    const [collapsed, setCollapsed] = useState(false);\n    const [fetching, setFetching] = useState(true);\n    const [showDrawer, setShowDrawer] = useState(false);\n\n    const fetchStudents = () =>\n        getAllStudents()\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n                setStudents(data);\n                setFetching(false);\n            }).catch(err => {\n            console.log(err.response)\n            err.response.json().then(res => {\n                console.log(res);\n            });\n        });\n\n    useEffect(() => {\n        console.log(\"component is mounted\");\n        fetchStudents();\n    }, []);\n\n    const renderStudents = () => {\n        if (fetching) {\n            return <Spin indicator={antIcon}/>\n        }\n        if (students.length <= 0) {\n            return <>\n                <Button\n                    onClick={() => setShowDrawer(!showDrawer)}\n                    type=\"primary\" shape=\"round\" icon={<PlusOutlined/>} size=\"small\">\n                    Add New Student\n                </Button>\n                <StudentDrawerForm\n                    showDrawer={showDrawer}\n                    setShowDrawer={setShowDrawer}\n                    fetchStudents={fetchStudents}\n                />\n                <Empty/>\n            </>\n        }\n        return <>\n            <StudentDrawerForm\n                showDrawer={showDrawer}\n                setShowDrawer={setShowDrawer}\n                fetchStudents={fetchStudents}\n            />\n            <Table\n                dataSource={students}\n                columns={columns(fetchStudents)}\n                bordered\n                title={() =>\n                    <>\n                        <Button\n                            onClick={() => setShowDrawer(!showDrawer)}\n                            type=\"primary\" shape=\"round\" icon={<PlusOutlined/>} size=\"small\">\n                            Add New Student\n                        </Button>\n                        <Tag style={{marginLeft: '10px'}}>Number of students</Tag>\n                        <Badge count={students.length} className=\"site-badge-count-4\"/>\n                    </>\n                }\n                pagination={{pageSize: 50}}\n                scroll={{y: 500}}\n                rowKey={student => student.id}\n            />\n        </>\n\n    }\n\n    return <Layout style={{minHeight: '100vh'}}>\n        <Sider collapsible collapsed={collapsed}\n               onCollapse={setCollapsed}>\n            <div className=\"logo\"/>\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n                <Menu.Item key=\"1\" icon={<PieChartOutlined/>}>\n                    Option 1\n                </Menu.Item>\n                <Menu.Item key=\"2\" icon={<DesktopOutlined/>}>\n                    Option 2\n                </Menu.Item>\n                <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"User\">\n                    <Menu.Item key=\"3\">Tom</Menu.Item>\n                    <Menu.Item key=\"4\">Bill</Menu.Item>\n                    <Menu.Item key=\"5\">Alex</Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"sub2\" icon={<TeamOutlined/>} title=\"Team\">\n                    <Menu.Item key=\"6\">Team 1</Menu.Item>\n                    <Menu.Item key=\"8\">Team 2</Menu.Item>\n                </SubMenu>\n                <Menu.Item key=\"9\" icon={<FileOutlined/>}>\n                    Files\n                </Menu.Item>\n            </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{padding: 0}}/>\n            <Content style={{margin: '0 16px'}}>\n                <Breadcrumb style={{margin: '16px 0'}}>\n                    <Breadcrumb.Item>User</Breadcrumb.Item>\n                    <Breadcrumb.Item>Bill</Breadcrumb.Item>\n                </Breadcrumb>\n                <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\n                    {renderStudents()}\n                </div>\n            </Content>\n            <Footer style={{textAlign: 'center'}}>By Amigoscode\n                <Divider>a nice divider</Divider></Footer>\n        </Layout>\n    </Layout>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
